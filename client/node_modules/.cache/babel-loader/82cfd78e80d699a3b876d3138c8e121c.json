{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\endur\\\\Desktop\\\\EmClickz\\\\DAPPs\\\\Dapp_IPFS_Storage\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FileStorage from \"./contracts/FileStorage.json\";\nimport getweb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport Moment from \"react-moment\";\nimport { StyledDropZone } from 'react-drop-zone';\nimport { FileIcon, defaultStyles } from 'react-file-icon';\nimport fileReaderPullStream from 'pull-file-reader';\nimport ipfs from './ipfs';\nimport \"react-drop-zone/dist/styles.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Table } from \"reactstrap\";\n\n//require('cors');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      FileStorage: [],\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    this.componentDidMount = async () => {\n      try {\n        // get network provider and web3 innstance.\n        const web3 = await getweb3();\n\n        // use web3 to get the user's account\n        const accounts = await web3.eth.getAccounts();\n\n        // get the cpntract instance\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = FileStorage.networks[networkId];\n        const instance = new web3.eth.Contract(FileStorage.abi, deployedNetwork && deployedNetwork.address);\n\n        //set web3, accounts and contract to the state, and then proceed with an\n        // example of interacting with the contrac's method.\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.getFiles);\n        // web3.currentProvider.publicConfigStore.on('update', async () => {\n        //     const changedAccounts = await web3.eth.getAccounts();\n        //     this.setState({accounts: changedAccounts});\n        //     this.getFiles();\n        // })\n      } catch (error) {\n        // catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. check console for details`);\n        console.log(error);\n      }\n    };\n    this.getFiles = async () => {\n      // get accounts and contract from state variable\n      try {\n        const {\n          accounts,\n          contract\n        } = this.state;\n        const fileLength = await contract.methods.getlength().call({\n          from: accounts[0]\n        });\n        let files = [];\n        for (let i = 0; i < fileLength; i++) {\n          let file = await contract.methods.getFile(i).call({\n            from: accounts[0]\n          });\n          files.push(file);\n        }\n        // set file state of app\n        this.setState({\n          FileStorage: files\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.onDrop = async file => {\n      try {\n        const {\n          contract,\n          accounts\n        } = this.state;\n        const stream = fileReaderPullStream(file);\n        const result = await ipfs.add(stream);\n        const timestamp = Math.round(+new Date() / 1000); //unix timestamp\n        const type = file.name.substr(file.name.lastIndexOf(\".\") + 1); // returns file type\n        let uploaded = await contract.methods.addFile(result[0].hash, file.name, type, timestamp).send({\n          from: accounts[0]\n        });\n        console.log(uploaded);\n        //debugger;\n        this.getFiles();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n  render() {\n    const {\n      FileStorage\n    } = this.state;\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contracts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(StyledDropZone, {\n          onDrop: this.onDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"2%\",\n                scope: \"row\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-left\",\n                children: \"File name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-right\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [FileStorage !== [] ? FileStorage.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(FileIcon, {\n                    size: 10,\n                    extension: item[2],\n                    ...defaultStyles[item[2]]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"text-left\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"https://ipfs.io/ipfs/\" + item[0],\n                    children: item[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"text-right\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"YYYY/MM/DD\",\n                    unix: true,\n                    children: item[3]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 34\n              }, this)) : null, \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","FileStorage","getweb3","Moment","StyledDropZone","FileIcon","defaultStyles","fileReaderPullStream","ipfs","Table","App","state","web3","accounts","contract","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","getFiles","error","alert","console","log","fileLength","methods","getlength","call","from","files","i","file","getFile","push","onDrop","stream","result","add","timestamp","Math","round","Date","type","name","substr","lastIndexOf","uploaded","addFile","hash","send","render","map","item","key"],"sources":["C:/Users/endur/Desktop/EmClickz/DAPPs/Dapp_IPFS_Storage/client/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport FileStorage from \"./contracts/FileStorage.json\";\r\nimport getweb3 from \"./getWeb3\";\r\nimport \"./App.css\";\r\nimport Moment from \"react-moment\";\r\nimport { StyledDropZone } from 'react-drop-zone';\r\nimport {FileIcon, defaultStyles} from 'react-file-icon';\r\nimport fileReaderPullStream from 'pull-file-reader';\r\nimport ipfs from './ipfs';\r\nimport \"react-drop-zone/dist/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Table } from \"reactstrap\";\r\n\r\n//require('cors');\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {FileStorage: [], web3: null, accounts: null, contract: null};\r\n    componentDidMount = async () => {\r\n        try {\r\n            // get network provider and web3 innstance.\r\n            const web3 = await getweb3();\r\n\r\n            // use web3 to get the user's account\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            // get the cpntract instance\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = FileStorage.networks[networkId];\r\n            const instance = new web3.eth.Contract(\r\n                FileStorage.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            //set web3, accounts and contract to the state, and then proceed with an\r\n            // example of interacting with the contrac's method.\r\n            this.setState({ web3, accounts, contract: instance}, this.getFiles);\r\n            // web3.currentProvider.publicConfigStore.on('update', async () => {\r\n            //     const changedAccounts = await web3.eth.getAccounts();\r\n            //     this.setState({accounts: changedAccounts});\r\n            //     this.getFiles();\r\n            // })\r\n        } catch (error) {\r\n            // catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. check console for details`,\r\n            );\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    getFiles = async () => {\r\n        // get accounts and contract from state variable\r\n        try {\r\n            const {accounts, contract} = this.state;\r\n            const fileLength = await contract.methods.getlength().call({from: accounts[0]});\r\n            let files = []\r\n            for (let i = 0; i < fileLength; i++) {\r\n                let file = await contract.methods.getFile(i).call({from: accounts[0]});\r\n                files.push(file);\r\n            }\r\n            // set file state of app\r\n            this.setState({FileStorage: files});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    onDrop = async (file) => {\r\n        try {\r\n            const {contract, accounts} = this.state;\r\n            const stream = fileReaderPullStream(file);\r\n            const result = await ipfs.add(stream);\r\n            const timestamp = Math.round(+new Date() / 1000); //unix timestamp\r\n            const type = file.name.substr(file.name.lastIndexOf(\".\")+1); // returns file type\r\n            let uploaded = await contract.methods.addFile(result[0].hash, file.name, type, timestamp).send({from: accounts[0]});\r\n            console.log(uploaded);\r\n            //debugger;\r\n            this.getFiles();\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {FileStorage} = this.state;\r\n        if (!this.state.web3) {\r\n            return <div>Loading Web3, accounts, and contracts...</div>;\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"container pt-3\">\r\n                    <StyledDropZone onDrop={this.onDrop}/>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"2%\" scope=\"row\">Type</th>\r\n                                <th className=\"text-left\">File name</th>\r\n                                <th className=\"text-right\">Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <div>{FileStorage !==[] ? FileStorage.map((item, key)=>(\r\n                                 <tr>\r\n                                    <th><FileIcon size={10} extension={item[2]} {...defaultStyles[item[2]]} /></th>\r\n                                    <th className=\"text-left\">{<a href={\"https://ipfs.io/ipfs/\"+item[0]}>{item[1]}</a>}</th>\r\n                                    <th className=\"text-right\"><Moment format=\"YYYY/MM/DD\" unix>{item[3]}</Moment></th>\r\n                                </tr>\r\n                                )) : null};\r\n                            </div>\r\n                        </tbody>\r\n                    </Table> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}