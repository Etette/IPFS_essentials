{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\endur\\\\Desktop\\\\EmClickz\\\\DAPPs\\\\Dapp_IPFS_Storage\\\\client\\\\src\\\\App.js\";\nimport React, { component } from \"react\";\nimport FileStorage from \"./contracts/FileStorage.json\";\nimport getweb3 from \"./getWeb3\";\nimport \"./App.css\";\n// import { StyledDropZone } from \"react-drop-zone\";\nimport Dropzone from \"./Dropzone\";\nimport { Table } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      fileStorage: [],\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n    this.componentDidMount = async () => {\n      try {\n        // get network provider and web3 innstance.\n        const web3 = await getweb3();\n\n        // use web3 to get the user's account\n        const accounts = await web3.eth.getAccounts();\n\n        // get the cpntract instance\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = FileStorage.networks[networkId];\n        const instance = new web3.eth.contract(FileStorage.abi, deployedNetwork && deployedNetwork.address);\n\n        //set web3, accounts and contract to the state, and then proceed with an\n        // example of interacting with the contrac's method.\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.runExample);\n      } catch (error) {\n        // catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. check console for details`);\n        console.log(error);\n      }\n    };\n    this.getFiles = async () => {};\n    this.onDrop = async () => {};\n  }\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contracts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Drop files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DropZone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","component","FileStorage","getweb3","Dropzone","Table","App","state","fileStorage","web3","accounts","contract","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","abi","address","setState","runExample","error","alert","console","log","getFiles","onDrop","render"],"sources":["C:/Users/endur/Desktop/EmClickz/DAPPs/Dapp_IPFS_Storage/client/src/App.js"],"sourcesContent":["import React, { component } from \"react\";\r\nimport FileStorage from \"./contracts/FileStorage.json\";\r\nimport getweb3 from \"./getWeb3\";\r\nimport \"./App.css\";\r\n// import { StyledDropZone } from \"react-drop-zone\";\r\nimport Dropzone from \"./Dropzone\";\r\nimport { Table } from \"reactstrap\";\r\n\r\n\r\n\r\nclass App extends component {\r\n    state = {fileStorage: [], web3: null, accounts: null, contract: null};\r\n    componentDidMount = async () => {\r\n        try {\r\n            // get network provider and web3 innstance.\r\n            const web3 = await getweb3();\r\n\r\n            // use web3 to get the user's account\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            // get the cpntract instance\r\n            const networkId = await web3.eth.net.getId();\r\n            const deployedNetwork = FileStorage.networks[networkId];\r\n            const instance = new web3.eth.contract(\r\n                FileStorage.abi,\r\n                deployedNetwork && deployedNetwork.address,\r\n            );\r\n\r\n            //set web3, accounts and contract to the state, and then proceed with an\r\n            // example of interacting with the contrac's method.\r\n            this.setState({ web3, accounts, contract: instance}, this.runExample);\r\n        } catch (error) {\r\n            // catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. check console for details`,\r\n            );\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    getFiles = async () => {\r\n\r\n    }\r\n\r\n    onDrop = async () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.web3) {\r\n            return <div>Loading Web3, accounts, and contracts...</div>;\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center\">Drop files here</h1>\r\n                    <DropZone />   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,WAAW;AAClB;AACA,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,KAAK,QAAQ,YAAY;AAAC;AAInC,MAAMC,GAAG,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KACxBM,KAAK,GAAG;MAACC,WAAW,EAAE,EAAE;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAI,CAAC;IAAA,KACrEC,iBAAiB,GAAG,YAAY;MAC5B,IAAI;QACA;QACA,MAAMH,IAAI,GAAG,MAAMN,OAAO,EAAE;;QAE5B;QACA,MAAMO,QAAQ,GAAG,MAAMD,IAAI,CAACI,GAAG,CAACC,WAAW,EAAE;;QAE7C;QACA,MAAMC,SAAS,GAAG,MAAMN,IAAI,CAACI,GAAG,CAACG,GAAG,CAACC,KAAK,EAAE;QAC5C,MAAMC,eAAe,GAAGhB,WAAW,CAACiB,QAAQ,CAACJ,SAAS,CAAC;QACvD,MAAMK,QAAQ,GAAG,IAAIX,IAAI,CAACI,GAAG,CAACF,QAAQ,CAClCT,WAAW,CAACmB,GAAG,EACfH,eAAe,IAAIA,eAAe,CAACI,OAAO,CAC7C;;QAED;QACA;QACA,IAAI,CAACC,QAAQ,CAAC;UAAEd,IAAI;UAAEC,QAAQ;UAAEC,QAAQ,EAAES;QAAQ,CAAC,EAAE,IAAI,CAACI,UAAU,CAAC;MACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZ;QACAC,KAAK,CACA,uEAAsE,CAC1E;QACDC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACtB;IACJ,CAAC;IAAA,KAEDI,QAAQ,GAAG,YAAY,CAEvB,CAAC;IAAA,KAEDC,MAAM,GAAG,YAAY,CAErB,CAAC;EAAA;EAEDC,MAAM,GAAG;IACL,IAAI,CAAC,IAAI,CAACxB,KAAK,CAACE,IAAI,EAAE;MAClB,oBAAO;QAAA,UAAK;MAAwC;QAAA;QAAA;QAAA;MAAA,QAAM;IAC9D;IACA,oBACI;MAAK,SAAS,EAAC,KAAK;MAAA,uBAChB;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAI,SAAS,EAAC,aAAa;UAAA,UAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAK,eAChD,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACV;MAAA;MAAA;MAAA;IAAA,QACJ;EAEd;AACJ;AAEA,eAAeH,GAAG"},"metadata":{},"sourceType":"module"}